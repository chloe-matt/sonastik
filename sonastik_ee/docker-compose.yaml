version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sonastik_ee_web
    restart: always
    ports:
      - "${PORT:-4000}:4000"
    environment:
      - PHX_HOST=${PHX_HOST:-localhost}
      - PORT=${PORT:-4000}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - DATABASE_URL=${DATABASE_URL}
      - POOL_SIZE=${POOL_SIZE:-10}
      - DEEPL_API_KEY=${DEEPL_API_KEY}
      - DNS_CLUSTER_QUERY=${DNS_CLUSTER_QUERY}
    labels:
      - traefik.http.middlewares.sonastik-middleware.redirectregex.regex=^(http|https)://(?:www\.)?(.+)
      - traefik.http.middlewares.sonastik-middleware.redirectregex.replacement=${1}://www.${2}
      - traefik.http.middlewares.sonastik-middleware.redirectregex.permanent=true
      - traefik.http.routers.sonastik.middlewares=sonastik-middleware
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sonastik_network
    healthcheck:
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/4000' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: postgres:16-alpine
    container_name: sonastik_ee_db
    restart: always
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-sonastik_ee_prod}
    volumes:
      - sonastik_db_data:/var/lib/postgresql/data
    networks:
      - sonastik_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-sonastik_ee_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  sonastik_network:
    driver: bridge

volumes:
  sonastik_db_data: